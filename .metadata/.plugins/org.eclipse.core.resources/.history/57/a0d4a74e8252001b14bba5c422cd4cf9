package uiQuanLy;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Frame;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.text.DecimalFormat;
import java.util.List;

import javax.swing.Box;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;

import com.toedter.calendar.JDateChooser;

import database.Database;
import entities.DichVu;
import entities.HoaDon;
import services.QuanLyDichVu;
import services.QuanLyHoaDon;
import uiLogin.GUIMenu;
import uiThueTraPhong.GUITraPhong;

import javax.swing.SwingConstants;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.JComboBox;
import javax.swing.JScrollPane;
import javax.swing.JButton;
import javax.swing.ImageIcon;
import javax.swing.DefaultComboBoxModel;

public class GUIQuanLyHoaDon extends JPanel implements ActionListener, MouseListener{

	/**
	 * Create the panel.
	 */
	
	public static DefaultTableModel tableModel;
	JTable table;
	JPanel pNor;
	JLabel lblTitle, lblMaHD, lblMaNV, lblTongTien, lblNgayLap, lblTinhTrang;
	JButton btnLamMoi, btnSua, btnXoa, btnTra, btnBack;
	private JComboBox<String> cmbTinhTrang;
	private Frame child;
	private JTextField txtMaHD, txtMaNV, txtTongTien;
	JDateChooser jdcNgayLap;
	
	public static String maPhieu;
	public static String cmndKH;
	public static String maPhong;
	private GUIMenu parent=null;
	
	QuanLyHoaDon qlhd = new  QuanLyHoaDon();
	
	public GUIQuanLyHoaDon(Frame parent) {
		setBounds(32, 32, 1924, 771);
		child = parent;
		setLayout(null);
		
		lblTitle = new JLabel("Quản Lý Hóa Đơn");
		lblTitle.setBounds(764, 11, 398, 58);
		lblTitle.setFont(new Font("times new roman", Font.BOLD, 50));
		lblTitle.setForeground(new Color(0xFFAA00));
		add(lblTitle);
		
		lblMaHD = new JLabel("Mã Hóa Đơn:");
		lblMaHD.setFont(new Font("Times New Roman", Font.BOLD, 15));
		lblMaHD.setHorizontalAlignment(SwingConstants.RIGHT);
		lblMaHD.setBounds(561, 103, 152, 39);
		add(lblMaHD);
		
		lblMaNV = new JLabel("Mã Nhân Viên:");
		lblMaNV.setFont(new Font("Times New Roman", Font.BOLD, 15));
		lblMaNV.setHorizontalAlignment(SwingConstants.RIGHT);
		lblMaNV.setBounds(561, 142, 152, 39);
		add(lblMaNV);
		
		lblTongTien = new JLabel("Tổng Tiền:");
		lblTongTien.setFont(new Font("Times New Roman", Font.BOLD, 15));
		lblTongTien.setHorizontalAlignment(SwingConstants.RIGHT);
		lblTongTien.setBounds(620, 181, 93, 39);
		add(lblTongTien);
		
		lblNgayLap = new JLabel("Ngày Lập Hóa Đơn:");
		lblNgayLap.setHorizontalAlignment(SwingConstants.RIGHT);
		lblNgayLap.setFont(new Font("Times New Roman", Font.BOLD, 15));
		lblNgayLap.setBounds(546, 220, 167, 39);
		add(lblNgayLap);
		
		lblTinhTrang = new JLabel("Tình Trạng Hóa Đơn:");
		lblTinhTrang.setFont(new Font("Times New Roman", Font.BOLD, 15));
		lblTinhTrang.setHorizontalAlignment(SwingConstants.RIGHT);
		lblTinhTrang.setBounds(561, 259, 152, 39);
		add(lblTinhTrang);
		
		txtMaHD = new JTextField();
		txtMaHD.setBounds(723, 103, 64, 31);
		add(txtMaHD);
		txtMaHD.setColumns(10);
		
		txtMaNV = new JTextField();
		txtMaNV.setBounds(723, 142, 275, 31);
		add(txtMaNV);
		txtMaNV.setColumns(10);
		
		txtTongTien = new JTextField();
		txtTongTien.setBounds(723, 181, 275, 31);
		add(txtTongTien);
		txtTongTien.setColumns(10);
		
		cmbTinhTrang = new JComboBox<String>();
		cmbTinhTrang.setModel(new DefaultComboBoxModel(new String[] {"Đã Thanh Toán", "Chưa Thanh Toán"}));
		cmbTinhTrang.setBounds(723, 264, 198, 31);
		add(cmbTinhTrang);
		
		jdcNgayLap = new JDateChooser();
		jdcNgayLap.setBounds(722, 220, 179, 31);
		add(jdcNgayLap);
		
		
		btnLamMoi = new JButton("Làm Mới");
		btnLamMoi.setFont(new Font("Tahoma", Font.PLAIN, 13));
		btnLamMoi.setIcon(new ImageIcon(".\\image\\reload.png"));
		btnLamMoi.setBounds(1043, 260, 142, 39);
		add(btnLamMoi);
		
		btnSua = new JButton("Chỉnh Sửa");
		btnSua.setIcon(new ImageIcon(".\\image\\edit.png"));
		btnSua.setFont(new Font("Tahoma", Font.PLAIN, 13));
		btnSua.setBounds(571, 324, 142, 39);
		add(btnSua);
		
		btnXoa = new JButton("Xóa");
		btnXoa.setIcon(new ImageIcon(".\\image\\remove.png"));
		btnXoa.setFont(new Font("Tahoma", Font.PLAIN, 13));
		btnXoa.setBounds(764, 324, 142, 39);
		add(btnXoa);
		
		btnTra = new JButton("Trả Phòng");
		btnTra.setIcon(new ImageIcon(".\\image\\booking.png"));
		btnTra.setBounds(957, 325, 135, 39);
		add(btnTra);
		
		btnBack = new JButton("Lùi Về Trang Trước");
		btnBack.setBackground(Color.RED);
		btnBack.setFont(new Font("Tahoma", Font.PLAIN, 13));
		btnBack.setIcon(new ImageIcon(".\\image\\logout.png"));
		btnBack.setBounds(1150, 324, 219, 39);
		add(btnBack);
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(581, 394, 794, 351);
		add(scrollPane);
		
		int col[]= {5,20,20,15,10};
		//setColumnWidth(col);
		String[] tieuDe = "Mã Hóa Đơn;Tên Nhân Viên;Tổng Số Tiền;Ngày Lập Hóa Đơn;Tình Trạng Hóa Đơn".split(";");
		tableModel = new DefaultTableModel(tieuDe,0);
			table = new JTable(tableModel) {
				public boolean isCellEditable(int row, int col) {
						return false;
				}
				public Component prepareRenderer( TableCellRenderer renderer, int row, int col ) {
					Component c = super.prepareRenderer(renderer, row, col);
					if ( row % 2 == 0 && !isCellSelected(row, col)) {
						c.setBackground( Color.decode("#F1F1F1") );
					}
					else 
						if(!isCellSelected(row, col)){
							c.setBackground( Color.decode("#D7F1FF") );
						}else {
							c.setBackground(Color.decode("#25C883"));
						}		        
					return c;
				}
			};
		table.setAutoCreateRowSorter(true);
		scrollPane.setViewportView(table);
		
		
		JTableHeader header = table.getTableHeader();
		header.setBackground(Color.CYAN);
		header.setOpaque(false);
		//xét cứng cột
		table.getTableHeader().setReorderingAllowed(false);
		//xét độ dài của cột
		for(int i = 0; i < 5; i++) {
			table.getColumnModel().getColumn(i).setPreferredWidth(col[i]*4);
		}
		DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
		centerRenderer.setHorizontalAlignment( JLabel.CENTER );
		for(int i=0;i<5;i++) {
			table.getColumnModel().getColumn(i).setCellRenderer( centerRenderer );
		}
		ShowHoaDon();	
		
		
		
		
		
		// Đăng kí sự kiện
		table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		btnXoa.addActionListener(this);
		btnSua.addActionListener(this);
		btnBack.addActionListener(this);
		btnLamMoi.addActionListener(this);
		btnTra.addActionListener(this);
		table.addMouseListener(this);
	}
	
	
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		Object src = e.getSource();
		if(src.equals(btnLamMoi)) {
			ActionLamMoi();
		}else if(src.equals(btnSua)) {
			//actionSua();
		}else if(src.equals(btnXoa)) {
			 //actionXoa();
		}else if(src.equals(btnTra)) {
			//actionTraPhong();
		}else if(src.equals(btnBack)) {
			new GUIMenu(1);
			child.setVisible(false);
		}
	}
	
	private void ShowHoaDon() {
		//xoaTableData();
		QuanLyHoaDon hd = new QuanLyHoaDon();
		List<HoaDon> list = hd.dsHD();
		tableModel.setRowCount(0);
			for(HoaDon HD : list) {
				DecimalFormat df = new DecimalFormat();
				tableModel.addRow(new Object[] {HD.getMaHoaDon(), HD.getMaNV(), HD.getTongTien(), df.format(HD.getNgayLapHD()), HD.getTinhTrangHD() });
				//String[] rowData = {};
				//tableModel.addRow(rowData);
			}
	}	




//	private void updateTableData() {
//		xoaTableData();
//		QuanLyHoaDon hd = new QuanLyHoaDon();
//		java.util.List<HoaDon> list = hd.dsHD();
//			for(HoaDon HD : list) {
//				DecimalFormat df = new DecimalFormat();
//				String[] rowData = {HD.getMaHoaDon()+"", HD.getMaNV()+"", HD.getTongTien()+"", df.format(HD.getNgayLapHD()), HD.getTinhTrangHD()+"" };
//				tableModel.addRow(rowData);
//			}
//			table.setModel(tableModel);
//	}
//	private void xoaTableData() {
//		while(tableModel.getRowCount()>0) {
//			tableModel.removeRow(0);
//		}
//	}
	
	public void ActionLamMoi() {
		for (int i = tableModel.getRowCount() - 1; i >= 0; i--)
			tableModel.removeRow(i);
		txtMaHD.setText("");
		cmbTinhTrang.setSelectedItem(null);
		txtMaNV.setText("");
		txtTongTien.setText("");
		jdcNgayLap.setDate(null);
	}
	
	// cần chỉnh sửa
	
	
//	public void ActionTraPhong()
//	{
//		int row = table.getSelectedRow();
//		if(row==-1) {
//			JOptionPane.showMessageDialog(this,"Cần Chọn Phiếu Trả");
//			return;
//		}
//		if(table.getValueAt(row, 5).toString().equals("Đã Đặt")) {
//			JOptionPane.showMessageDialog(this, "Phòng Chưa Ở - Không Thể Trả");
//			return;
//		}
//		String cmnd = table.getValueAt(row, 2).toString();
//		maPhieu = table.getValueAt(row, 0).toString();
//		cmndKH = cmnd;
//		maPhong = txtMaPhong.getText();
//		new GUITraPhong(parent);
//		dispose();
//	}
	// Sự kiện con chuột
	
	
	@Override
	public void mouseClicked(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
}
